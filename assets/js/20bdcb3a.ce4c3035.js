(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return m})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),s=(n(0),n(91)),i=n(101),o={title:"Server Side Rendering",slug:"/server-side-rendering"},l={unversionedId:"02-03-server-side-rendering",id:"02-03-server-side-rendering",isDocsHomePage:!1,title:"Server Side Rendering",description:"To enable SSR you should provide the --ssrEnabled flag. With this flag Ragu will start to return the micro-frontend",source:"@site/docs/02-03-server-side-rendering.mdx",slug:"/server-side-rendering",permalink:"/docs/server-side-rendering",editUrl:"https://github.com/ragu-framework/docs/edit/main/docs/02-03-server-side-rendering.mdx",version:"current",sidebar:"docs",previous:{title:"Consuming a micro-frontend",permalink:"/docs/consuming-a-micro-frontend"},next:{title:"Design Goals",permalink:"/docs/design-goals"}},m=[{value:"The state file",id:"the-state-file",children:[]},{value:"Executing the state file",id:"executing-the-state-file",children:[]}],c={toc:m};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"To enable ",Object(s.b)("inlineCode",{parentName:"p"},"SSR")," you should provide the ",Object(s.b)("inlineCode",{parentName:"p"},"--ssrEnabled")," flag. With this flag Ragu will start to return the micro-frontend\nHTML rendered from server."),Object(s.b)(i.a,{binExecution:!0,both:"ragu-cli dev --file my-mfe.js --ssrEnabled",mdxType:"PackageManager"}),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-json",metastring:"{8}","{8}":!0},'{\n  "dependencies": [],\n  "client": "http://localhost:3100/compiled/client-side/my-mfe.[hash].js",\n  "ssrEnabled": false,\n  "static": false,\n  "styles": [],\n  "resolverFunction": "my-mfe_my-mfe",\n  "html": "Hello, World",\n  "state": null,\n  "props": {}\n}\n')),Object(s.b)("p",null,"After you activate the flag you will see a tiny difference into the micro-frontend's manifest file.\nWhen ",Object(s.b)("inlineCode",{parentName:"p"},"SSR")," is enabled, Ragu's manifest returns the ",Object(s.b)("inlineCode",{parentName:"p"},"html")," property which is the result of your application."),Object(s.b)("h2",{id:"the-state-file"},"The state file"),Object(s.b)("p",null,"Let's say you want your micro-frontend to perform an async operation, fetching a request for example. You can use\na state file for this purpose. A state file is only executed from the server side, that means that the browser will\nnever perform that action. Also, the state will be passed as a property to your micro-frontend."),Object(s.b)("p",null,"The state file must export a default function that returns a ",Object(s.b)("inlineCode",{parentName:"p"},"Promise"),".\nProperties received by the ",Object(s.b)("inlineCode",{parentName:"p"},"state")," function are the same described at\n",Object(s.b)("a",{parentName:"p",href:"/docs/micro-frontends#receiving-parameters"},"Micro-frontend API"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript",metastring:'title="state.js"',title:'"state.js"'},"export default async ({params}) => {\n  if (!params.number) {\n    return null;\n  }\n\n  const pokemonResponse = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.number}`);\n  const pokemonResponseBody = await pokemonResponse.json();\n\n  return {\n    name: pokemonResponseBody.name\n  }\n}\n")),Object(s.b)("p",null,"The result will be provided to your micro-frontend as a query parameter."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript",metastring:'title="my-mfe.js"',title:'"my-mfe.js"'},"export default ({params, state}) => {\n  if (!params.number) {\n    return {\n      html: `You must provide the number parameter`\n    }\n  }\n\n  return {\n    html: `The pokemon number ${params.number} is called ${state.name}`\n  }\n}\n")),Object(s.b)("p",null,"It is important to know that the state function is always resolved at the server side. That means that the ",Object(s.b)("inlineCode",{parentName:"p"},"Pok\xe9API"),"\ncall will never be performed at the browser."),Object(s.b)("h2",{id:"executing-the-state-file"},"Executing the state file"),Object(s.b)(i.a,{both:"ragu-cli dev --file my-mfe.js --stateFile state.js --ssrEnabled",binExecution:!0,mdxType:"PackageManager"}),Object(s.b)("p",null,"Open the preview route providing the number parameter:\n",Object(s.b)("a",{parentName:"p",href:"http://localhost:3100/preview?number=1"},"http://localhost:3100/preview?number=1")),Object(s.b)("p",null,"Let's take a look at the manifest file: ",Object(s.b)("a",{parentName:"p",href:"http://localhost:3100/?number=1"},"http://localhost:3100/?number=1"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-json",metastring:"{9,10,11}","{9,10,11}":!0},'{\n  "dependencies": [],\n  "client": "http://localhost:3100/compiled/client-side/my-mfe.[hash].js",\n  "ssrEnabled": true,\n  "static": false,\n  "styles": [],\n  "resolverFunction": "my-mfe_my-mfe",\n  "html": "The pokemon number 1 is called bulbasaur",\n  "state": {\n    "name": "bulbasaur"\n  },\n  "props": {\n    "number": "1"\n  }\n}\n')),Object(s.b)("p",null,"The state file is there and that's how Ragu transits information between the server and client-side."),Object(s.b)("div",{className:"admonition admonition-info alert alert--info"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"The state mechanism is the same for any framework. There always will be a state file, also the state will be provided by\nprops at the micro-frontend function."))),Object(s.b)("div",{className:"admonition admonition-info alert alert--info"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Code Example")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"The example above can be found\n",Object(s.b)("a",{parentName:"p",href:"https://github.com/ragu-framework/docs/tree/main/examples/example-02-03/state-file"},"here")))))}p.isMDXComponent=!0}}]);